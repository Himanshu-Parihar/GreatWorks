name:  Harry Release CI Pipeline - Config Lib

on:
  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]    
  workflow_dispatch:

  
jobs:
  release-project:
      name: Release to Github Releases
      runs-on: windows-latest
     # needs: build
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Generate release tag
          id: tag
          run: echo "::set-output name=release_tag::$((get-date).ToString("yyyy.MM"))"           
        - name: Build project # This would actually build your project, using zip for an example artifact
          run: |
           new-item -path  ".\Demo Folder" -type directory
           Compress-Archive -Path .\* -DestinationPath .\archive.zip

    #    - name: Upload Aritifact
    #      uses: actions/upload-artifact@v2
    #      with:
    #            name: archive
    #            path: .\archive.zip
    #    - name: Download Aritifact
    #      uses: actions/download-artifact@v3
    #      with:
    #          name: archive
    #          path: D:\a\GreatWorks\GreatWorks\
    #    - name: Display structure of downloaded files
    #      run: ls -R
    #      working-directory: D:\a\GreatWorks\GreatWorks\      
 #       - name: zip content
 #         uses: thedoctor0/zip-release@main
 #         with:
 #                   type: 'zip'
 #                   filename: release.zip
 #       - name: Create Release
 #         id: create-new-release
 #         uses: actions/create-release@v1
 #         env:
 #                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
 #         with:
 #                   tag_name: v${{ github.run_number }}
 #                   release_name: Release v${{ github.run_number }}
 #       - name: Upload to Github Release
 #         id: upload-release-asset 
 #         uses: actions/upload-release-asset@v1
 #         env:
 #                   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 #         with:
 #                   upload_url: ${{ steps.create-new-release.outputs.upload_url }}
 #                   asset_path: .\
 #                   asset_name: site-v${{ github.run_number }}.zip
 #                   asset_content_type: application/zip   
        - name: Upload binaries to release
          uses: svenstaro/upload-release-action@v2
          with:
           repo_token: ${{ secrets.GITHUB_TOKEN }}
           file: D:\a\GreatWorks\GreatWorks\archive.zip
           asset_name: archive.zip
           #tag: v${{ github.run_number }}
           #tag: v${{ github.run_id }}
           release_name: Release${{ steps.tag.outputs.release_tag }}-${{ github.run_attempt }}
           tag: v${{ github.run_attempt }}
           overwrite: true
           body: "github.run_attempt"
